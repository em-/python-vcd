#!/usr/bin/python

import sys
import cairo
from vcd.vcd import Vcd

WIDTH, HEIGHT = 600, 600

if len(sys.argv) != 2:
    print "Usage: %s FILE" % sys.argv[0]
    sys.exit(2)

steps = [(0, '0'), (30, 1), (40, 0), (60, 1)]

def process_steps(steps):
    result = []

    value = steps[0][1]
    duration = steps[1][0] - steps[0][0]
    previous = None
    result.append((value, duration, previous))

    for i in range(1, len(steps)-1):
        value = steps[i][1]
        duration = steps[i+1][0] - steps[i][0]
        previous = steps[i-1][1]
        result.append((value, duration, previous))

    value = steps[-1][1]
    duration = 5
    previous = steps[-2][1]
    result.append((value, duration, previous))
    return result


def draw_steps(ctx, signal):
    now  = 0
    ctx.move_to(0,0)
    for value, duration, previous in process_steps(steps):
        if value in (0, 1):
            ctx.line_to(now, -10*value)
            ctx.rel_line_to(duration, 0)
        else:
            ctx.stroke()
            x, y = ctx.get_current_point()
            ctx.move_to(x, 0)
            ctx.line_to(x+duration, 0)
            ctx.line_to(x+duration, -10)
            ctx.line_to(x, -10)
            ctx.close_path()
            ctx.fill()
            ctx.move_to(x, 0)
            ctx.rel_move_to(duration, 0)
            ctx.stroke()
        now += duration
    ctx.stroke()

surface = cairo.ImageSurface (cairo.FORMAT_ARGB32, WIDTH, HEIGHT)
ctx = cairo.Context(surface)

ctx.set_source_rgb (1, 1, 1)
ctx.set_operator (cairo.OPERATOR_SOURCE)
ctx.paint()

v = Vcd(sys.argv[1])
ctx.set_source_rgb (0, 0, 1)
ctx.translate(0, 10)
ctx.save()
for signal in v.signals.values():
    ctx.set_font_size(11)
    ctx.new_path()
    ctx.text_path(signal.reference)
    ctx.fill()
    ctx.translate(0, 20)

ctx.restore()
for signal in v.signals.values():
    ctx.save()
    ctx.translate(100, 0)
    draw_steps(ctx, signal)
    ctx.restore()
    ctx.translate(0, 20)

surface.write_to_png('vcd.png')
